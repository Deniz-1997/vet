nelmio_api_doc:
    documentation:
        info:
            title:        'КОРВЕТ API'
            version:      '1.0.0'
            description:  'Комплексное облачное решение для ветеринарии'
        basePath: /api/
        host: '%env(SWAGGER_API_CURRENT_HOST)%'
        securityDefinitions:
            oauth2ClientCredentials:
                description: "Для тестирования<br>
                          client_id: 1_3u3bpqxw736s4kgo0gsco4kw48gos800gscg4s4w8w80oogc8c<br>
                          client_secret: 6cja0geitwsok4gckw0cc0c04sc0sgwgo8kggcoc08wocsw8wg<br>"
                type: oauth2
                flow: application
                tokenUrl: /api/oauth/v2/token/
                #in: header
                # scopes:
                #  default: default
            oauth2Password:
                description: "Для тестирования:<br>
                          username: root<br>
                          password: root<br>
                          client_id: 1_3u3bpqxw736s4kgo0gsco4kw48gos800gscg4s4w8w80oogc8c<br>
                          client_secret: 6cja0geitwsok4gckw0cc0c04sc0sgwgo8kggcoc08wocsw8wg<br>"
                type: oauth2
                flow: password
                tokenUrl: /api/oauth/v2/token/
                #in: header
                # scopes:
                #  default: default
            apiKey:
                type: apiKey
                # template: "Bearer {apiKey}"
                description: Access Token, перед токеном необходимо вписать 'Bearer '
                name: Authorization
                in: header

            oauth2:
                type: oauth2
                description: This API uses OAuth 2 with the implicit grant flow.
                flow: authorizationCode
                authorizationUrl: '/api/oauth/v2/auth'
                tokenUrl: '/api/oauth/v2/token/'
                refreshUrl: '/api/oauth/v2/token/'
                name: Authorization by AuthCode
                in: header
        security:
            - api_key: []
            - oauth2: []
            - oauth2Password: []
            - oauth2ClientCredentials: []
        request_format:
            method: accept_header
        accept_type: null
        tags:
            - name: History
              description: История изменений
            - name: Pet
              description: Животные
            - name: Owner
              description: Владельцы
            - name: Appointment
              description: Приемы
            - name: Event
              description: Мероприятия
            - name: WildAnimal
              description: Дикие животные
            - name: File
              description: Документы
            - name: FileOwner
              description: Файлы владельцев
            - name: UploadedFile
              description: Загруженные в систему файлы
            - name: PetToOwner
              description: Животные владельцев
            - name: MonitoredObject
              description: Подконтрольные объекты
            - name: CullingRegistration
              description: Регистрация отлова
            - name: Contractor
              description: Справочник контрагентов
            - name: PetType
              description: Справочник типов животных
            - name: AnimalDeath
              description: Справочник смертей животных
            - name: Profession
              description: Справочник специальностей
            - name: EventType
              description: Справочник типов мероприятий
            - name: FileType
              description: Справочник типов файлов
            - name: Breed
              description: Справочник пород животных
            - name: PetIdentifierType
              description: Справочник типов идентификаторов животных
            - name: OwnerActivity
              description: Справочник видов деятельности владельцев
            - name: OwnerLegalForm
              description: Справочник видов правовых форм юридических лиц
            - name: OwnerStatus
              description: Справочник статусов владельцев
            - name: AppointmentStatus
              description: Справочник статусов приемов
            - name: EventStatus
              description: Справочник статусов мероприятий
            - name: Organization
              description: Справочник организаций
            - name: Unit
              description: Справочник подразделений
            - name: Product
              description: Справочник номенклатуры
            - name: CashRegister
              description: Контрольно-кассовые машины (ККМ)
            - name: CashRegisterServer
              description: Справочник ККМ-серверов
            - name: Shift
              description: Кассовые смены
            - name: CashReceipt
              description: Кассовые чеки
            - name: CashFlow
              description: Чеки внесения / выплаты
            - name: CashierSchedule
              description: График работы кассиров
            - name: Authorization
              description: Авторизация
            - name: Account
              description: Текущий пользователь
            - name: Role
              description: Роли
            - name: User
              description: Пользователи
            - name: Group
              description: Группы пользователей
            - name: Client
              description: Приложения
            - name: ClientGroup
              description: Группы приложений
            - name: PrintForms
              description: Печатные формы
            - name: Enum
              description: Перечисления
            - name: Settings
              description: Настройки
            - name: Async
              description: Асинхронные операции
            - name: Entity
              description: Сущности
            - name: ActionGroup
              description: Группы действий
            - name: Action
              description: Действия (меню и группы кнопок)
            - name: Email
              description: Сообщения электронной почты
            - name: Email Template
              description: Шаблоны email
            - name: Email Theme
              description: Темы оформления email
            - name: SterilizationType
              description: Виды стерилизации
            - name: VaccinationType
              description: Вакцины
            - name: Shelter
              description: Приют
            - name: TagForm
              description: Справочник форм бирки
            - name: TagColor
              description: Справочник цветов для бирки
            - name: Stock
              description: Справочник слкадов
            - name: Printing
              description: Печатные формы
            - name: UserSchedule
              description: График работы врачей
            - name: AppointmentTemplate
              description: Справочник шаблонов приема
            - name: FtpHistory
              description: История импорта/экспорта отчетов 1С
            - name: ProductStock
              description: Остатки товаров на складах
            - name: PetLear
              description: Масти животных
            - name: ProductReceipt
              description: Поступление товаров
            - name: ProductTransfer
              description: Перемещение товаров
            - name: DocumentHistory
              description: Таблица истории
            - name: VeterinaryPassportType
              description: Справочник типов ветеринарных паспортов
            - name: FormTemplate
              description: Шаблоны форм
            - name: FormField
              description: Поля форм
            - name: FormFieldProperty
              description: Характеристики полей форм
        definitions:
            OAuth2TokenResponse:
                type: object
                properties:
                    access_token:
                        type: string
                        example: "Mzk1MDVhMzRjODUwMDdkZTBhMDFmZjdlZmRkMmUwZjI2ODU2YjJhNmU0ZDU2ZjFlNTg3Y2I5NDg0OWRmMWVmZQ"
                    expires_in:
                        type: integer
                        example: 3600
                    token_type:
                        type: string
                        example: "bearer"
                    scope:
                        type: string
                        example: "default"
                    refresh_token:
                        type: string
                        example: "ZTdlOWE5OGMzOGUzZTJmZTE1NjMzNDRjN2JjODVkZTA1MTc0ODI0ZDk3MDUxMTc4MGJkY2M3NjBlNjk3ZWExNg"
        paths:
            /api/oauth/v2/token/:
                get:
                    summary: "Получить токен авторизации"
                    description: "Возвращает токен авторизации"
                    produses: ["application/json"]
                    tags: ["Authorization"]
                    parameters:
                        - name: "grant_type"
                          in: "query"
                          type: "string"
                          enum: ["password", "client_credentials", "refresh_token"]
                          default: "password"
                          description: "Способ авторизации"

                        - name: "scope"
                          in: "query"
                          type: "string"
                          default: "default"
                          description: "Область доступа для токена, уровень доступа"

                        - name: "client_id"
                          in: "query"
                          type: "string"
                          default: "1_3u3bpqxw736s4kgo0gsco4kw48gos800gscg4s4w8w80oogc8c"
                          description: "ID клиента, через который необходимо проходить авторизацию"

                        - name: "client_secret"
                          in: "query"
                          type: "string"
                          default: "6cja0geitwsok4gckw0cc0c04sc0sgwgo8kggcoc08wocsw8wg"
                          description: "Секретный ключ клиента, через который необходимо проходить авторизацию"

                        - name: "username"
                          in: "query"
                          type: "string"
                          default: "root"
                          description: "Логин"
                          required: false

                        - name: "password"
                          in: "query"
                          type: "string"
                          default: "root"
                          description: "Пароль"
                          required: false

                        - name: "refresh_token"
                          in: "query"
                          type: "string"
                          default: ""
                          description: "Refresh токен (если grant_type = refresh_token)"
                          required: false
                    responses:
                        200:
                            description: "Успешный ответ сервиса"
                            schema:
                                $ref: '#/definitions/OAuth2TokenResponse'
                post:
                    summary: "Получить токен авторизации"
                    consumes:
                      - 'application/x-www-form-urlencoded'
                    description: "Возвращает токен авторизации, аналог функции GET"
                    produses: ["application/json"]
                    tags: ["Authorization"]
                    parameters:
                        - name: "grant_type"
                          in: "formData"
                          type: "string"
                          enum: ["password", "client_credentials", "refresh_token"]
                          default: "password"
                          description: "Способ авторизации"

                        - name: "scope"
                          in: "formData"
                          type: "string"
                          default: "default"
                          description: "Область доступа для токена, уровень доступа"

                        - name: "client_id"
                          in: "formData"
                          type: "string"
                          default: "1_3u3bpqxw736s4kgo0gsco4kw48gos800gscg4s4w8w80oogc8c"
                          description: "ID клиента, через который необходимо проходить авторизацию"

                        - name: "client_secret"
                          in: "formData"
                          type: "string"
                          default: "6cja0geitwsok4gckw0cc0c04sc0sgwgo8kggcoc08wocsw8wg"
                          description: "Секретный ключ клиента, через который необходимо проходить авторизацию"

                        - name: "username"
                          in: "formData"
                          type: "string"
                          default: "root"
                          description: "Логин"
                          required: false

                        - name: "password"
                          in: "formData"
                          type: "string"
                          default: "root"
                          description: "Пароль"
                          required: false

                        - name: "refresh_token"
                          in: "formData"
                          type: "string"
                          default: ""
                          description: "Refresh токен (если grant_type = refresh_token)"
                          required: false
                    responses:
                        200:
                            description: "Успешный ответ сервиса"
                            schema:
                                $ref: '#/definitions/OAuth2TokenResponse'
    areas:
        path_patterns: # an array of regexps
            - ^\/api\/(?!swagger\/oauth2-redirect|oauth-redirect|oauth\/v2\/auth|doc\.json).*$
    models:
        use_jms: true
